#include <stdio.h>
#include <time.h>
#define TODIGIT(x) ( x > '9' ? x - 'A' + 10 : x - '0') 

#define NMAX 2000
#define MMAX 501

int N;
int M;
char data[NMAX][MMAX];
char bar[NMAX][8];
int cnt;
int chk[5][5][5];
int scan[10][4] =
{
	{ 3, 2, 1, 1 }, //0
	{ 2, 2, 2, 1 }, //1
	{ 2, 1, 2, 2 }, //2
	{ 1, 4, 1, 1 }, //3
	{ 1, 1, 3, 2 }, //4
	{ 1, 2, 3, 1 }, //5
	{ 1, 1, 1, 4 }, //6
	{ 1, 3, 1, 2 }, //7
	{ 1, 2, 1, 3 }, //8
	{ 3, 1, 1, 2 }, //9
};

void init(){
	chk[2][1][1] = 0;
	chk[2][2][1] = 1;
	chk[1][2][2] = 2;
	chk[4][1][1] = 3;
	chk[1][3][2] = 4;
	chk[2][3][1] = 5;
	chk[1][1][4] = 6;
	chk[3][1][2] = 7;
	chk[2][1][3] = 8;
	chk[1][1][2] = 9;
}

int scanner(int x, int y, int z){
	int i;

	int min;

	min = x > y ? y : x;
	min = min > z ? z : min;

	x = x / min;
	y = y / min;
	z = z / min;
//	return chk[x][y][z];
#if 1
	for (i = 0; i < 10; i++){
		if (x == scan[i][1] && y == scan[i][2] && z == scan[i][3]){
			return i;
		}
	}
	return -1;
#endif
}

int cmp_bar(char* a, char* b){

	for (int i = 0; i < 8; i++){
		if (a[i] == b[i]) continue;
		return 0;
	}
	return 1;
}

void add_bar(char* b){

	for (int i = 0; i < cnt; i++){
		if (cmp_bar(bar[i], b)){
			return;
		}
	}
	for (int i = 0; i < 8; i++)
		bar[cnt][i] = b[i];

	cnt++;
}

void find_barcode(){
	int bitc;
	int w, x, y, z;
	int num, numc, numb;
	char bar[8], cur;

	for (int i = 0; i < N; i++){

		for (int j = M - 1; j >= 0; j--){
			if (data[i][j] != '0'){
				cur = TODIGIT((data[i][j]));
				bitc = 0; numc = 8;

				while (numc){
					w = x = y = z = 0;
					while ((cur & 1) == 0){
						if (bitc == 3) { j--;  cur = TODIGIT((data[i][j])); bitc = 0; }
						else { cur = cur >> 1; bitc++; }
					}

					do {
						z++;
						if (bitc == 3) { j--; cur = TODIGIT((data[i][j])); bitc = 0; }
						else { cur = cur >> 1; bitc++; }
					} while ((cur & 1) == 1);

					do {
						y++;
						if (bitc == 3) { j--; cur = TODIGIT((data[i][j])); bitc = 0; }
						else { cur = cur >> 1; bitc++; }
					} while ((cur & 1) == 0);

					do {
						x++;
						if (bitc == 3) { j--; cur = TODIGIT((data[i][j])); bitc = 0; }
						else { cur = cur >> 1; bitc++; }
					} while ((cur & 1) == 1);

					num = scanner(x, y, z);
					bar[--numc] = num;
					/*
					w = scan[num][0];

					do {
					if (bitc == 3) { j--; cur = TODIGIT((data[i][j])); bitc = 0; }
					else { cur = cur >> 1; bitc++; }
					} while (--w > 0);
					//*/
				}

				add_bar(bar);
			}
		}
	}
}


int main(){
	time_t start = clock();
	freopen("input.txt", "r", stdin);
	int tc;
	int answer, sum;
//	init();
	scanf("%d", &tc);
	for (int testCase = 1; testCase <= tc; testCase++){

		answer = 0;
		cnt = 0;
		scanf("%d %d", &N, &M);
		for (int i = 0; i < N; i++){
			scanf("%s", data[i]);
		}

		find_barcode();

		for (int i = 0; i < cnt; i++){
			sum = (bar[i][0] + bar[i][2] + bar[i][4] + bar[i][6]) * 3 + bar[i][1] + bar[i][3] + bar[i][5] + bar[i][7];
			if (sum % 10 == 0){
				answer += bar[i][0] + bar[i][1] + bar[i][2] + bar[i][3] + bar[i][4] + bar[i][5] + bar[i][6] + bar[i][7];
			}
		}

		printf("#%d %d\n", testCase, answer);
	}
	time_t end = clock();

	printf("time : %f\n",(double)(end-start));
	return 0;
}
