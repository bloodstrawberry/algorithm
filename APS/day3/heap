#include <stdio.h>
#define MAX 101
int heap[MAX];
int hCnt;

void print(){
	printf("[");
	for (int i = 1; i <= hCnt; i++){
		printf("%d ", heap[i]); 
	}
	puts("]");
}
void push(int d){
	
	heap[++hCnt] = d;

	int idx = hCnt;

	while (idx>1 && heap[idx] < heap[idx/2]){
		int t = heap[idx];
		heap[idx] = heap[idx / 2];
		heap[idx / 2] = t;
		idx /= 2;
	}

}

int pop(){
	int val = heap[1];

	heap[1] = heap[hCnt--];

	int idx = 1;
	int next;
	while (1){
		next = idx * 2;
		if (next < hCnt && heap[next] > heap[next + 1]){
			next = next + 1;
		}

		if (next > hCnt || heap[idx] < heap[next]){
			break;
		}

		int t = heap[idx];
		heap[idx] = heap[next];
		heap[next] = t;

		idx = next;
	}

	return val;
}
int main() {
	print();
	push(3);
	print();
	push(2);
	print();
	push(6);
	print();
	push(1);
	print();
	push(8);
	print();
	printf("pop : %d\n", pop());
	print();
	printf("pop : %d\n", pop());
	print();
	printf("pop : %d\n", pop());
	print();
	printf("pop : %d\n", pop());
	print();
	printf("pop : %d\n", pop());
	print();
	if (hCnt > 0){
		printf("pop : %d\n", pop());
		print();
	}
	else{
		puts("heap underflow!!!");
	}
	return 0;
}
