#include <stdio.h>
#define MAX 4000
//int src[MAX];// = { 2, 3, 1, 4, 5, 7, 9, 8, 6 };
int src[] = {1, 2,1,2,2,2,5,4,6,8,3,3,3,10,10};
int tmp[MAX];
int n;

void print(char * msg){
	printf("%s : [", msg);
	for (int i = 0; i < n; i++){
		printf("%d ", src[i]);
	}
	puts("]");
}
void mSort(int s, int e){
	if (s < e){
		int m = (s + e) / 2;
		mSort(s, m);
		mSort(m + 1, e);
		int p = s;
		int q = m + 1;
		int idx = s;
		while (p<=m || q<=e){
			if (q>e || (p<=m && src[p] < src[q])){//왼쪽
				tmp[idx++] = src[p++];
			}
			else{
				tmp[idx++] = src[q++];
			}
		}

		for (int i = s; i <= e; i++){
			src[i] = tmp[i];
		}
	}
}
void qSort(int s, int e){
	if (s < e){
		int p = s;
		int l = s;
		int r = e;

		while (l < r){
			while (src[p] >= src[l] && l<e){l++;}
			while (src[p] < src[r]){r--;}
			if (l < r){
				int t = src[l];src[l] = src[r];src[r] = t;
			}
		}
		int t = src[p];src[p] = src[r];src[r] = t;
		qSort(s, r - 1);
		qSort(r + 1, e);
	}
}
int main() {
#if 0
	n = MAX;
	for (int i = 0; i < MAX; i++){
		src[i] = i;
	}
#endif
	n = sizeof(src) / sizeof(int);
	print("정렬전");
//	mSort(0, n - 1);
	qSort(0, n - 1);
	print("정렬후");
	return 0;
}
