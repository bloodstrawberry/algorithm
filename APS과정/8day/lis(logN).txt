#include <stdio.h>
#define MAXNUM 101
#define MAXN 20
int src[] = {8,2,4,3,6,11,7,10,14,5};
int n;

int dpMemo[MAXN];
int dpCnt;
int path[MAXNUM];
int getIdx(int d){
	
	if (dpCnt == 0 || dpMemo[0] > d){
		return 0;
	}
	else if(dpMemo[dpCnt-1]<d){
		return dpCnt;

	}
	else{
		int s = 0;
		int e = dpCnt - 1;
		int m;
		while (s < e){
			m = (s + e) / 2;
			if (dpMemo[m] < d){
				s = m + 1;
			}
			else if (dpMemo[m] > d){
				e = m - 1;
			}
			else{
				return m;
			}
		}
		if (dpMemo[e] < d){
			e++;
		}
		return e;

	}
	return -1;
}
void pathPrint(int idx){
	if (idx == 0){
		return;
	}
	pathPrint(path[idx]);
	printf("%d ", idx);
}
int main(){
	n = 10;
	int idx;
	for (int i = 0; i < n; i++){
		
		idx = getIdx(src[i]);

		dpMemo[idx] = src[i];
		if (dpCnt == idx){
			dpCnt++;
		}

		path[src[i]] = (idx) ? dpMemo[idx - 1] : 0;
	}

	printf("cnt : %d\n", dpCnt);
	pathPrint(dpMemo[dpCnt - 1]);
	puts("");

	return 0;
}

