#include <stdio.h>

int isPrime1(int n){
	if (n == 1){
		return 0;
	}

	for (int i = 2; i < n; i++){
		if (n%i == 0){
			return 0;
		}
	}
	return  1;
}
double root(double n){
	double x = 1;

	while (1){
		x = (x + n / x) / 2;
		if (x*x - n >= -5e-5 && x*x -n <= 5e-5){
			break;
		}
	}
	return x;
}

int isPrime2(int n){
	if (n == 1){
		return 0;
	}
	int iLen = root(n);
	for (int i = 2; i <= iLen; i++){
		if (n%i == 0){
			return 0;
		}
	}
	return  1;
}
int isPrime3(int n){
	if (n == 1){
		return 0;
	}
	if (n == 2){
		return 1;
	}
	int iLen = root(n);
	if (n & 1 == 0){
		return 0;
	}
	for (int i = 3; i <= iLen; i++){
		if (n%i == 0){
			return 0;
		}
	}
	return  1;
}

int main(){
	int n = 2;
	printf("root : %.15f\n", root(n));
	return 0;
}