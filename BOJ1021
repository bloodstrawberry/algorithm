//baekjoon_1021
#pragma warning(disable : 4996)
#include <stdio.h>
#define MAX (100)

int N, M;
int Arr[MAX];
int Que[MAX*MAX*MAX];
int WP, RP;

void input()
{
	int i;
	scanf("%d %d", &N, &M);

	for (i = 0;i < M;i++)
		scanf("%d", &Arr[i]);
}

void output()
{
	int i;
	for (i = 0;i < M;i++)
		printf("%d ", Arr[i]);

	putchar('\n');
}

void outputQue()
{
	int i;
	for (i = RP;i < WP;i++)
		printf("%d ", Que[i]);

	putchar('\n');
}

void InputFront(int num)
{
	Que[--RP] = num;
}

void InputBack(int num)
{
	Que[WP++] = num;
}

int outputFront()
{
	return Que[RP++];
}

int outputBack()
{
	return Que[--WP];
}

void LeftShift()
{
	InputBack(outputFront());
}

void RightShift()
{
	InputFront(outputBack());
}

int stepLeft(int num)
{

	int i, cnt, rtn;

	cnt = rtn = 0;
	for (i = RP;i < WP;i++)
	{	
		if (Que[i] == num)
		{
			rtn = cnt;
			break;
		}
		cnt++;	
	}
		
	return rtn;
}

int stepRight(int num)
{
	int i, cnt, rtn;

	cnt = rtn = 0;
	for (i = WP - 1;i >= RP;i--)
	{
		cnt++;
		if (Que[i] == num)
		{
			rtn = cnt;
			break;
		}
	}

	return rtn;
}

int main(void)
{
	int i, k;
	int cntL, cntR;
	int stepR, stepL;
	int ANS;

	input();

	WP = RP = MAX * MAX * MAX / 2;

	for (i = 0; i < N;i++) InputBack(i + 1);

	ANS = cntL = cntR = 0;
	for (i = 0; i < M;i++)
	{
		if (Que[RP] == Arr[i]) outputFront();
		else
		{
			stepR = stepRight(Arr[i]);
			stepL = stepLeft(Arr[i]);
	
			if (stepL < stepR)
			{
				for (k = 0; k < stepL;k++) LeftShift();

				outputFront();
				ANS += stepL;			
			}
			else
			{
				for (k = 0; k < stepR;k++) RightShift();

				outputFront();
				ANS += stepR;
			}
		}
	}

	printf("%d\n", ANS);

	return 0;

}
