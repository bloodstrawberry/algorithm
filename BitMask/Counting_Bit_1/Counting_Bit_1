
#include <stdio.h>

void printbinary(unsigned int a)
{
	unsigned int mask = 1 << 31;
	for (int i = 0; i < 32;i++)
	{
		printf("%d ", (a & mask) == mask);
		mask >>= 1;
	}
	putchar('\n');
}

typedef unsigned long long int ll;
void printbinary_long(ll a)
{
	ll mask = 1ull << 63;
	for (int i = 0; i < 64;i++)
	{
		printf("%d ", (a & mask) == mask);
		mask >>= 1;
	}
	putchar('\n');
}

int main()
{
	printbinary(0x55555555); //0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1
	printbinary(0x33333333); //0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1
	printbinary(0x0F0F0F0F); //0 0 0 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 1 1 1
	printbinary(0x00FF00FF); //0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1
	printbinary(0x0000FFFF); //0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

	printf("-----------------------------------------\n");

	unsigned int x;
	//1011 1100 0110 0011 0111 1110 1111 1111
	x = 0xBC637EFF; //0 1 0 1 0 0 1 1 0 0 1 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 0 1 0 0 1 0 => 15개 1
	printbinary(x);

	x = (x & 0x55555555) + ((x >> 1) & 0x55555555);
	printbinary(x);

	x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
	printbinary(x);

	x = (x & 0x0F0F0F0F) + ((x >> 4) & 0x0F0F0F0F);
	printbinary(x);

	x = (x & 0x00FF00FF) + ((x >> 8) & 0x00FF00FF);
	printbinary(x);

	x = (x & 0x0000FFFF) + ((x >> 16) & 0x0000FFFF);
	printbinary(x);

	printf("%d\n", x);

	//----------------------------------------------------

	x = 0x5321FA92; //0 1 0 1 0 0 1 1 0 0 1 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 0 1 0 0 1 0 => 15개 1
	printbinary(x);


	x = x - ((x >> 1) & 0x55555555);
	x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
	x = (x + (x >> 4)) & 0x0F0F0F0F;
	x = x + (x >> 8);
	x = x + (x >> 16);
	x &= 0x0000003F; //32개인 경우 1F면 0이 됨.
	printbinary(x);

	printf("%d\n", x);

	//----------------------------------------------------

	ll y;
	y = 0xBC637EFFBC637EFF;

	printbinary_long(y);
	y = (y & 0x5555555555555555) + ((y >> 1) & 0x5555555555555555);
	y = (y & 0x3333333333333333) + ((y >> 2) & 0x3333333333333333);
	y = (y & 0x0F0F0F0F0F0F0F0F) + ((y >> 4) & 0x0F0F0F0F0F0F0F0F);
	y = (y & 0x00FF00FF00FF00FF) + ((y >> 8) & 0x00FF00FF00FF00FF);
	y = (y & 0x0000FFFF0000FFFF) + ((y >> 16) & 0x0000FFFF0000FFFF);
	y = (y & 0x00000000FFFFFFFF) + ((y >> 32) & 0x00000000FFFFFFFF);

	printf("%d\n", y);

	y = 0xBC637EFFBC637EFF;
	y = y - ((y >> 1) & 0x5555555555555555);
	y = (y & 0x3333333333333333) + ((y >> 2) & 0x3333333333333333);
	y = (y + (y >> 4)) & 0x0F0F0F0F0F0F0F0F;
	y = y + (y >> 8);
	y = y + (y >> 16);
	y = y + (y >> 32);
	y &= 0x000000000000007F; // 0x..7F = 127

	printf("%d\n", y);

	return 0;
}


