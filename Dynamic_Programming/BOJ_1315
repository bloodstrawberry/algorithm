//baekjoon_1315
//RPG.

#include <stdio.h>

int N;

typedef struct st
{
	int STR;
	int INT;
	int PNT;
}QUEST;

QUEST quest[110];

int D[1010][1010]; // true or false, D[S][I] = 힘이 S, 지력이 I가 될 수 있는가?
int P[1010][1010]; // P[S][I] = 힘이 S, 지력이 I로 깰 수 있는 퀘스트를 모두 깼을 때, 남는 포인트.

// D[1][1] = true = 1
// D[S][I] = true 가 되기 위해서는
// S > 1, P[S-1][I] > 0, D[S-1][I] = true, 힘이 S-1, 지력이 I가 가능하고, 힘이 S-1이고 지력이 I로 깰 수 있는 모든 퀘스트를 깬다면, 힘이 S, 지력 I가 될 수 있다.
// I > 1, P[S][I-1] > 0, D[S][I-1] = true


int main()
{
	int s, i, k, ans;

	scanf("%d", &N);

	for (i = 0; i < N;i++) scanf("%d %d %d", &quest[i].STR, &quest[i].INT, &quest[i].PNT);

	D[1][1] = 1;
	ans = 0;
	for (s = 1; s <= 1000;s++) // s = str
	{
		for (i = 1; i <= 1000;i++) // i = int
		{
			int cnt = 0;

			P[s][i] = 2 - s - i; // (1,1)은 가능하니깐 

			//퀘스트를 다 훑으면서 포인트 증가.
			for (k = 0; k < N;k++)
			{
				if (quest[k].STR <= s || quest[k].INT <= i)
				{
					P[s][i] += quest[k].PNT;
					cnt++;
				}
			}

			if (D[s - 1][i] && P[s - 1][i] > 0) D[s][i] = 1;
			else if (D[s][i - 1] && P[s][i - 1] > 0) D[s][i] = 1;

			if (D[s][i]) ans = (ans > cnt) ? ans : cnt;

		}
	}

	printf("%d\n", ans);
	
	return 0;
}
