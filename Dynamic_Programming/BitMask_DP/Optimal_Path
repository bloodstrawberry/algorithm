#include <stdio.h>

#define INF (10000000)

int T, N;

typedef struct st
{
	int x;
	int y;
}XY;

XY xy[15];

int MAP[15][15];
int DP[1 << 12][12];

int absV(int x, int y)
{
	return (x > y)? x - y : y - x;
}

int dist(XY xy1, XY xy2)
{
	return absV(xy1.x, xy2.x) + absV(xy1.y, xy2.y);
}

int minV(int a, int b)
{
	return (a < b) ? a : b;
}

int main(void)
{
	int i, j, k, tc;

	scanf("%d", &T);
	for (tc = 1; tc <= T;tc++)
	{
		int ans;
		scanf("%d", &N);

		//회사 좌표, 집 좌표.
		scanf("%d %d", &xy[0].x, &xy[0].y);
		scanf("%d %d", &xy[N+1].x, &xy[N+1].y);
		
		for (i = 1; i <= N;i++) scanf("%d %d", &xy[i].x, &xy[i].y);

		N += 2;
		for (i = 0; i < N;i++)
			for (k = 0; k < N;k++)
				MAP[i][k] = dist(xy[i], xy[k]);
		
		N--;
		for (i = 0; i < (1 << N);i++)
			for (k = 0; k < N;k++)
				DP[i][k] = INF;

		DP[1][0] = 0;
		
		for (i = 0; i < (1 << N);i++)
		{
			for (j = 1; j < N;j++)
			{
				if (i & (1 << j))
				{
					for (k = 0; k < N;k++)
					{
						if (i & (1 << k) && MAP[k][j])
							DP[i][j] = minV(DP[i][j], DP[i - (1 << j)][k] + MAP[k][j]);
					}
				}
			}
		}
		
		ans = INF;
		for (i = 1; i < N;i++)
			ans = minV(ans, DP[(1 << N) - 1][i] + MAP[i][N]);

		printf("#%d %d\n", tc, ans);
	}

	return 0;
}

