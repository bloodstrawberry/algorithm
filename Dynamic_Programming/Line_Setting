//선 맞춤
#include <stdio.h>

typedef long long int ll;

int T, N, e;

typedef struct st
{
	ll x;
	ll y;
}XY;

XY xy[10010];

int D[10010];

ll ccw(XY A, XY B, XY C)
{
	XY v1, v2;

	v1.x = B.x - A.x;
	v1.y = B.y - A.y;

	v2.x = C.x - A.x;
	v2.y = C.y - A.y;

	return v1.x * v2.y - v2.x * v1.y;
}

int main(void)
{
	int tc, i, k;
	ll U, L;
	scanf("%d", &T);

	for (tc = 1; tc <= T; tc++)
	{
		scanf("%d %d", &N, &e);

		for (i = 1; i <= N; i++) scanf("%lld %lld", &xy[i].x, &xy[i].y);
		for (i = 1; i <= N; i++) D[i] = 0x7fff0000;

		D[1] = 0;

		for (i = 1; i <= N - 1; i++)
		{
			XY a, b, c, bU, cU, bL, cL;

			a = xy[i];
			b = bU = bL = xy[i + 1];
			bU.y += e;
			bL.y -= e;

			if (D[i + 1] > D[i] + 1) D[i + 1] = D[i] + 1;
			for (k = i + 2; k <= N; k++)
			{
				c = cL = cU = xy[k];
				cU.y += e;
				cL.y -= e;

				//꺾은 선이 되는 경우 break
				if (ccw(a, bL, cU) < 0 || ccw(a, bU, cL) > 0) break;

				//가능한 가장 큰 기울기 상의 점 갱신
				ll tmpU = ccw(a, bU, cU);
				if (tmpU < 0) bU = cU;

				//가능한 가장 작은 기울기 상의 점 갱신
				ll tmpL = ccw(a, bL, cL);
				if (tmpL > 0) bL = cL;
				
				ll t1, t2;
				t1 = ccw(a, bU, c);
				t2 = ccw(a, bL, c);

				//선택한 점 c가 끝에 들어 온다면 DP 갱신, 그렇지 않다면 통과.
				if (t1 <= 0 && t2 >= 0)
				{
					if (D[k] > D[i] + 1) D[k] = D[i] + 1;
				}
			}
		}
		printf("#%d %d\n", tc, D[N]);
	}

	return 0;
}
