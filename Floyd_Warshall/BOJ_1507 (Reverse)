//baekjoon_1507
//궁금한 민호. 역 플로이드

#include <stdio.h>

// A->B cost : x
// A->C->B로 가는 비용도 x면
// A->B로 가는 도로는 필요가 없다.
// 이렇게 모든 도시의 쌍을 보면서 필요없는 도로를 제거.
// MAP[i][j] == MAP[i][k] + MAP[k][j] 라면, d[i][j]는 필요없는 도로.

int N;
int MAP[25][25];
int unused[25][25];

int main()
{
	int k, i, j, ans;

	scanf("%d", &N);
	for (i = 1; i <= N;i++)
		for (k = 1; k <= N;k++)
			scanf("%d", &MAP[i][k]);

	for (k = 1; k <= N;k++)
	{
		for (i = 1; i <= N;i++)
		{
			if (i == k) continue;
			for (j = 1; j <= N;j++)
			{
				if (i == j || k == j) continue;
				
				if (MAP[i][j] > MAP[i][k] + MAP[k][j]) // 다시 최단 거리를 갱신하게 되는 경우는 불가능.
				{
					printf("-1\n");
					return 0;
				}

				if (MAP[i][j] == MAP[i][k] + MAP[k][j]) unused[i][j] = 1;
			}
		}
	}

	ans = 0;
	for (i = 1; i <= N;i++)
		for (k = 1; k <= N;k++)
			ans += MAP[i][k] * !unused[i][k];

	printf("%d\n", ans / 2);
	
	return 0;
}
