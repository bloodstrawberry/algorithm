#include <stdio.h>
int len ;
int keyLen ;

int my_strlen(char * str){
	int len=0;
	while (*str++)len++;
	return len;
}
int power(int base, int exp){
	int res = 1;

	for (int i = exp; i; i--){
		res = res*base;
	}

	return res;
}

int makeHash(char * arr, int sIdx){
	int res = 0;
	int exp = 0;
	
	for (int i = sIdx + keyLen - 1; i >= sIdx; --i, ++exp){
		res += (arr[i] - '0') * power(10, exp);
	}

	return res;
}

int reHash(int key, int prevN, int nextN){
	int res = key;

	res -= prevN * 1000; 
	res = res * 10;
	res += nextN;

	return res;
}

int main(){
	char nums[] =  "6843212431" ;  
	char keys[] =  "4321" ;   

	len = my_strlen(nums);
	keyLen = my_strlen(keys);
	int hashKey = makeHash(keys, 0); 
	int textKey = 0;     

	     
	int finded = -1; 
	int iLen = len - keyLen;
	for (int i = 0; i < iLen; i++){
		
		if (i == 0){ 
			textKey = makeHash(nums, 0);
		}
		else{ 
			textKey = reHash(textKey, nums[i - 1] - '0', nums[i + 3] - '0');
		}
		
		if (hashKey == textKey){
			finded = i;
			break;
		}

	}

	printf("pattern is in %d \n", finded);

	return 0;
}
