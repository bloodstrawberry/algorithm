//baekjoon_1708
//볼록 껍질, Convex Hull, Graham's Scan

#include <stdio.h>
typedef long long int ll;

int N;
typedef struct st
{
	ll x;
	ll y;
}XY;

XY a[100100];
XY b[100100];
XY Stack[100100];
int SP;

XY minXY;

ll ccw(XY A, XY B, XY C)
{
	XY v1, v2;

	v1.x = B.x - A.x;
	v1.y = B.y - A.y;

	v2.x = C.x - A.x;
	v2.y = C.y - A.y;

	return v1.x * v2.y - v2.x * v1.y;
}

ll length(XY a, XY b)
{
	return (a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y);
}

int minV(XY a, XY b)
{
	ll tmp = ccw(minXY, a, b);
	if (tmp > 0) return 1;
	else if (tmp == 0 && (length(minXY, a) < length(minXY, b))) return 1;
	return 0;
}

void merge(int start, int end)
{
	int mid, i, j, k;

	mid = (start + end) / 2;
	i = start;
	j = mid + 1;
	k = 0;

	while (i <= mid && j <= end)
	{
		if (minV(a[i],a[j])) b[k++] = a[i++];
		else b[k++] = a[j++];
	}

	while (i <= mid) b[k++] = a[i++];
	while (j <= end) b[k++] = a[j++];
	for (i = start; i <= end; i++)
		a[i] = b[i - start];
}

void sort(int start, int end)
{
	int mid;
	if (start == end) return;

	mid = (start + end) / 2;
	sort(start, mid);
	sort(mid + 1, end);
	merge(start, end);
}

int main(void)
{
	int i, cnt;

	scanf("%d", &N);
	
	minXY.x = minXY.y = 0x7fff0000;
	for (i = 0; i < N; i++)
	{
		scanf("%lld %lld", &a[i].x, &a[i].y);
		if (minXY.y >= a[i].y)
		{
			if (minXY.y == a[i].y)
			{
				if (minXY.x > a[i].x)
				{
					minXY.x = a[i].x;
					minXY.y = a[i].y;
				}
			}
			else
			{
				minXY.x = a[i].x;
				minXY.y = a[i].y;
			}
		}
	}

	sort(0, N - 1);

	cnt = 0;
	Stack[SP++] = a[cnt++];
	Stack[SP++] = a[cnt++];

	while (SP < 3)
	{
		ll tmp = ccw(Stack[SP - 2], Stack[SP - 1], a[cnt]);
		if (tmp > 0)
		{
			Stack[SP++] = a[cnt++];
		}
		else if (tmp == 0)
		{
			SP--;
			Stack[SP++] = a[cnt++];
		}
		else cnt++;
	}

	while (cnt < N)
	{
		ll tmp = ccw(Stack[SP - 2], Stack[SP - 1], a[cnt]);
		if (tmp > 0) Stack[SP++] = a[cnt++];
		else SP--;
	}

	printf("%d\n", SP);

	return 0;
}
