//baekjoon_3033
//가장 긴 문자열, 두 번 이상 등장하는 문자열, Rabin_Karp
#include <stdio.h>
#define MAX_TABLE (100010)

typedef long long int ll;

int T, L;
ll mod = MAX_TABLE;
char str[200100];

typedef struct st
{
	int idx;
	struct st *next;
}HASH;

HASH Hash[MAX_TABLE + 10];
HASH POOL[200100];
int cnt;

int strcmp(char *a, char *b, int len)
{
	int i;
	for (i = 0; i < len; i++)
		if (a[i] != b[i]) return 1;
	return 0;
}

int check(int len)
{
	HASH *nd;
	int i, k, d, length;
	ll key, mul, hash;
	cnt = 0;
	
	for (i = 0; i < MAX_TABLE;i++) Hash[i].next = 0;

	key = 0, mul = 1, d = 2;
	for (i = 0; i < len;i++)
	{
		key = key * d + str[i];
		key %= mod;
		mul *= d;
		mul %= mod;
	}

	mul /= d;

	nd = &POOL[cnt++];
	nd->idx = 0;
	
	nd->next = Hash[key].next;
	Hash[key].next = nd;

	hash = key;
	length = L - len + 1;
	for (i = 1; i < length;i++)
	{	
		//hash = (((hash - (str[i - 1] * mul)) * d + str[i + len - 1])) % mod;
		//hash = (hash + mod) % mod;

		hash -= str[i - 1] * mul;
		hash = (hash + mod * 2) % mod;
		hash = hash * d + str[i + len - 1];
		hash = (hash + mod * 2) % mod;

		if (Hash[hash].next)
		{
			for (nd = Hash[hash].next;nd; nd = nd->next)
				if (!strcmp(str + nd->idx, str + i, len)) return 1;
		}

		nd = &POOL[cnt++];
		nd->idx = i;

		nd->next = Hash[hash].next;
		Hash[hash].next = nd;
	}

	return 0;
}

int main(void)
{
	int tc, i, k;

	T = 1;
	for (tc = 1; tc <= T;tc++)
	{
		int l, r, m, ans;
		scanf("%d %s", &L, str);

		ans = 0;
		l = 2, r = L - 1;
	
		while (l <= r)
		{
			m = (l + r) / 2;
			if (check(m))
			{
				ans = m;
				l = m + 1;
			}
			else r = m - 1;
		}
		
		printf("%d\n", ans);
	}

	return 0;
}
