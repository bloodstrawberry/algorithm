//baekjoon_11437
//LCA
#pragma warning(disable : 4996)
#include <stdio.h>
int N, M;

typedef struct st
{
	int value;
	struct st* next;
}NODE;

NODE HEAD[50010];
NODE POOL[50010 * 2];
int cnt;

void Make(int p, int c)
{
	NODE *nd = &POOL[cnt++];
	nd->value = c;

	if (HEAD[p].next == 0) HEAD[p].next = nd;
	else
	{
		nd->next = HEAD[p].next;
		HEAD[p].next = nd;
	}
}

void input()
{
	int i, k;
	int p, c;

	scanf("%d", &N);

	for (i = 0; i < N - 1;i++)
	{
		scanf("%d %d", &p, &c);		
		Make(p, c);
		Make(c, p);
	}

}

int Que[50010];
int parent[50010];
int VISIT[50010];
int Depth[50010];
int RP, WP;

void BFS()
{
	int out;
	NODE *p;

	Que[WP++] = 1;
	VISIT[1] = 1;
	Depth[1] = 1;

	while (WP > RP)
	{
		out = Que[RP++];

		for (p = HEAD[out].next; p; p = p->next)
		{
			int tmp = p->value;

			if (!VISIT[tmp])
			{
				Que[WP++] = tmp;
				VISIT[tmp] = 1;
				parent[tmp] = out;
				Depth[tmp] = Depth[out] + 1;
			}
		}
	}
}

void LCA(int a, int b)
{
	int tmp;
	
	if (a == 1 || b == 1) 
	{
		printf("%d\n", 1);
		return;
	}

	//높은 depth가 a가 되게 변경.
	if (Depth[a] < Depth[b])
	{
		tmp = a;
		a = b;
		b = tmp;
	}
	
	while (Depth[a] != Depth[b]) a = parent[a];	
	while (a != b) a = parent[a], b = parent[b];

	printf("%d\n", a);
}

void output(int num)
{
	NODE *p = HEAD[num].next;

	while (p)
	{
		printf("%d\n", p->value);
		p = p->next;
	}
}

int main()
{
	int i, a, b;
	
	input();
	BFS();

	scanf("%d", &M);

	for (i = 0; i < M;i++)
	{
		scanf("%d %d", &a, &b);
		LCA(a, b);
	}

	return 0;
}
