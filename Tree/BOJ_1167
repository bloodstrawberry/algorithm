//baekjoon_1167
//트리의 지름

#include <stdio.h>

int N;

typedef struct st
{
	int value;
	int weight;
	struct st *next;
}NODE;

NODE HEAD[100001];
NODE POOL[200100];
int cnt;

void Make(int a, int b, int c)
{
	NODE *nd = &POOL[cnt++];
	nd->value = b;
	nd->weight = c;
	if (HEAD[a].next == NULL) HEAD[a].next = nd;
	else
	{
		nd->next = HEAD[a].next;
		HEAD[a].next = nd;
	}
}

void output(int n)
{
	NODE *nd = HEAD[n].next;

	while (nd)
	{
		printf("%d %d\n", nd->value, nd->weight);
		nd = nd->next;
	}
}

int VISIT[100001];
int MAX;
int stNode;

void DFS(int node, int S)
{
	NODE *p;

	if (MAX < S)
	{
		stNode = node;
		MAX = S;
	}

	for (p = HEAD[node].next; p; p = p->next)
	{
		if (VISIT[p->value]) continue;

		VISIT[p->value] = 1;
		DFS(p->value, S+p->weight);
	}
}

int main()
{
	int i, k;
	int a, b, c;

	scanf("%d", &N);

	for (i = 0; i < N; i++)
	{
		scanf("%d", &a);
		while (1)
		{
			scanf("%d", &b);
			if (b == -1) break;
			scanf("%d", &c);

			Make(a, b, c);
		}
	}

	VISIT[1] = 1;
	DFS(1, 0);
	for (i = 1; i <= N; i++) VISIT[i] = 0;
	VISIT[stNode] = 1;
	DFS(stNode, 0);
	
	printf("%d\n", MAX);

	return 0;
}
