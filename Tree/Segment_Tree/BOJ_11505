//baekjoon_11505
//구간 곱 구하기
#pragma warning(disable : 4996)
#include <stdio.h>
#include <stdlib.h>

typedef long long int ll;

int N, M, K;
int Arr[1000100];
ll tree[4000100];
int m = 1000000007;

ll init(int s, int e, int Node)
{
	if (s == e) return tree[Node] = Arr[s];

	return tree[Node] = (init(s, (s + e) / 2, Node * 2) * init((s + e) / 2 + 1, e, Node * 2 + 1)) % m;
}

ll find(int s, int e, int a, int b, int Node)
{
	if (b < s || e < a) return 1;
	
	if (a <= s && e <= b) return tree[Node];

	return (find(s, (s + e) / 2, a, b, Node * 2) * find((s + e) / 2 + 1, e, a, b, Node * 2 + 1)) % m;
}

void update(int s, int e, int diff, int index, int Node)
{
	if (index < s || e < index) return;

	if (s != e)
	{
		update(s, (s + e) / 2, diff, index, Node * 2);
		update((s + e) / 2 + 1, e, diff, index, Node * 2 + 1);
		tree[Node] = (tree[Node * 2] * tree[Node * 2 + 1]) % m;
	}
	else
		tree[Node] += diff;
}

int main(void)
{
	int i;
	int a, b, c, diff;

	scanf("%d %d %d", &N, &M, &K);

	for (i = 1; i <= N;i++)
		scanf("%d", &Arr[i]);

	init(1, N, 1);
	
	for (i = 0; i < 2 * M;i++)
	{
		scanf("%d %d %d", &a, &b, &c);

		if (a == 1)
		{
			diff = c - Arr[b];
			Arr[b] = c;
			update(1, N, diff, b, 1);
		}
		else
			printf("%lld\n", find(1, N, b, c, 1));
	}

	return 0;
}
