//baekjoon_2042
//구간 

#pragma warning(disable : 4996)
#include <stdio.h>
typedef long long ll;

int N, M, K;
ll Arr[1001000];
ll tree[4001000];

ll init(int s, int e, int Node)
{
	if (s == e) return tree[Node] = Arr[s];

	return tree[Node] = init(s, (s + e) / 2, Node * 2) + init((s + e) / 2 + 1, e, Node * 2 + 1);
}

ll findSum(int s, int e, int a, int b, int Node)
{
	if (b < s || a > e) return 0;
	if (a <= s && b >= e) return tree[Node];

	return findSum(s, (s + e) / 2, a, b, Node * 2) + findSum((s + e) / 2 + 1, e, a, b, Node * 2 + 1);
}

void update(int s, int e, int Node, int index, int diff)
{
	if (index < s || e < index) return;
	tree[Node] += diff;
	
	if (s != e)
	{
		update(s, (s + e) / 2, Node * 2, index, diff);
		update((s + e) / 2 + 1, e, Node * 2 + 1, index, diff);
	}
}

int main(void)
{
	int i;
	ll c, diff;
	int a, b;


	scanf("%d %d %d", &N, &M, &K);

	for (i = 1; i <= N;i++)
		scanf("%lld", &Arr[i]);

	init(1, N, 1);

	for (i = 0; i < M * 2;i++)
	{
		scanf("%d %d %lld", &a, &b, &c);
		if (a == 1)
		{
			diff = c - Arr[b];
			Arr[b] = c;
			update(1, N, 1, b, diff);
		}
		else printf("%lld\n", findSum(1, N, b, c, 1));
	}

	return 0;
}
